import { AccountType } from "./AccountType";

export const routes = {
  welcome: () => "/index.html",
  newWallet: () => "/wallets/new",
  backupRecovery: () => "/recover/backup",
  seedRecovery: () => "/recover/seed",
  seedRecoveryPassword: () => "/recover/seed/password",
  setupRecovery: () => "/recovery",
  setupSeedRecovery: () => "/recovery/seed",
  confirmSeedRecovery: () => "/recovery/seed/confirm",
  lockScreen: () => "/lock-screen",
  account: () => "/account",
  upgrade: () => "/account/upgrade",
  accounts: () => "/accounts",
  accountTypeSelection: () => "/accountTypeSelection",
  accountTypeInformation: (accountType: AccountType) => `/accountTypeInformation`,
  newToken: () => "/tokens/new",
  token: (tokenAddress: string) => `/tokens/${tokenAddress}`,
  tokenPath: () => "/tokens/:tokenAddress",
  hideToken: (tokenAddress: string) => `/tokens/${tokenAddress}/hide`,
  hideTokenPath: () => "/tokens/:tokenAddress/hide",
  reset: () => "/reset",
  disclaimer: () => "/disclaimer",
  legacy: () => "/legacy",
  settings: () => "/settings",
  settingsNetworks: () => "/settings/networks",
  settingsAddCustomNetwork: () => "/settings/networks/add",
  settingsEditCustomNetwork: () => "/settings/networks/edit",
  settingsRemoveCustomNetwork: () => "/settings/networks/remove",
  settingsDappConnections: () => "/settings/dapp-connections",
  backupDownload: (isFromSettings?: boolean) =>
    `/backup-download${isFromSettings ? "?settings" : ""}`,
  error: () => "/error",
}
